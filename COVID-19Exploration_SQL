/* COVID-19 Data Exploration */

SELECT *
FROM `CovidProject.CovidDeaths`;

-- Selected Data that I am going to start with
SELECT location, date, total_cases, new_cases, total_deaths, population
FROM `CovidProject.CovidDeaths`
WHERE continent is not null
ORDER BY 1,2 ;  

-- Total Cases vs Total Deaths 
-- This could be one way to show likelihood of dying if your contract COVID in your Country
SELECT location, date, total_cases, total_deaths, (Total_deaths/total_cases)*100 AS DeathPercentage
FROM `CovidProject.CovidDeaths` 
ORDER BY 1,2 ;

-- This shows specifcally for United States
SELECT location, date, total_cases, total_deaths, (Total_deaths/total_cases)*100 AS DeathPercentage
FROM `CovidProject.CovidDeaths`
WHERE location = 'United States' 
ORDER BY 1,2 ;

-- Total Cases vs Population
-- Shows what percentage of population got COVID
SELECT location, date, total_cases, population, (total_cases / population)*100 AS PercentPopulationInfected
FROM `CovidProject.CovidDeaths` ;

-- Shows what percentage of population got COVID for the United States
SELECT location, date, total_cases, population, (total_cases / population)*100 AS PercentPopulationInfected
FROM `CovidProject.CovidDeaths`
WHERE location = 'United States' ;

-- Countries with Highest Infections Rate compared to Population
SELECT location, population, MAX(total_cases) AS HighestInfectionCount, MAX(total_cases / population)*100 AS PercentPopulationInfected
FROM `CovidProject.CovidDeaths`
WHERE continent is not null
GROUP BY location, population
Order BY PercentPopulationInfected desc ;

-- Showing Countries with Highest Death Count 
SELECT location, MAX(Total_deaths) as TotalDeathCount
FROM `CovidProject.CovidDeaths`
Where continent is not null
GROUP BY location
Order BY TotalDeathCount desc;

-- Breaking things down by Continent
-- Showing continents with the highest death Count
SELECT continent, SUM(new_deaths) as TotalDeathCount
FROM `CovidProject.CovidDeaths`
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount desc ;

-- Global Covid Cases, deaths and Cases that end in Death
SELECT date, sum(new_cases) AS TotalCases, sum(new_deaths) AS TotalDeaths, (sum(new_deaths) / sum(new_cases))*100 AS DeathPercentage
FROM `CovidProject.CovidDeaths`
WHERE continent is not null
GROUP BY date
ORDER BY 1,2;

--Overall Total Global Numbers
SELECT sum(new_cases) AS TotalCases, sum(new_deaths) AS TotalDeaths, (sum(new_deaths) / sum(new_cases))*100 AS DeathPercentage
FROM `CovidProject.CovidDeaths`
Where continent is not null
ORDER BY 1,2;

--Total Population vs. Vaccinations
-- Shows percent of the population that has recieved at least one Covid Vaccine
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingVaccinationNumbers
FROM `CovidProject.CovidVaccinations` vac
JOIN `CovidProject.CovidDeaths` dea
  ON dea.location = vac.location
  and dea.date = vac.date
WHERE dea.continent is not null 
ORDER BY 2, 3;

-- Using Temp Table to perform calculation on Partition by in previous query
DROP Table if exists PercentPopulationVaccinated
CREATE TEMP TABLE PercentPopulationVaccinated
  (Continent STRING, Location STRING, Date datetime, Population INTEGER, New_vaccination INTEGER, RollingVaccinationNumbers INTEGER)
AS
  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(vac.new_vaccinations) OVER (PARTITION  BY dea.location ORDER BY dea.location, dea.date) AS RollingVaccinationNumbers
  FROM `CovidProject.CovidVaccinations` vac
  JOIN `CovidProject.CovidDeaths` dea
  ON dea.location = vac.location
  and dea.date = vac.date
  WHERE dea.continent is not null; 

Select *, (RollingVaccinationNumbers/Population)*100 AS RollingPercentPopulationVaccinated
FROM PercentPopulationVaccinated
